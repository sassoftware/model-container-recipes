{
  "swagger": "2.0",
  "info": {
    "description": "API specification for the Python or R model container that is generated by SAS Model Manager.",
    "version": "1.0.0",
    "title": "Python Model and R Model Container API"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/swagger.json": {
      "get": {
        "operationId": "getSwaggerDocument",
        "summary": "Get swagger API documentation for the web service",
        "description": "Retrieves the swagger API documentation for the web service.",
        "responses": {
          "200": {
            "description": "The request succeeded. The swagger API documentation for the service was returned."
          }
        }
      }
    },
    "/": {
      "get": {
        "operationId": "ServiceHealthCheck",
        "summary": "Check the status of the service",
        "description": "This endpoint enables you to perform a simple health (status) check to make sure that the service is available at any given time.",
        "responses": {
          "200": {
            "description": "If the service is available, this response returns with the content 'pong'.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "application/text": "pong"
            }
          },
          "default": {
            "description": "The service could not be executed because of an unexpected error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/executions": {
      "post": {
        "operationId": "RunMLService",
        "summary": "Performs scoring with specified input data in the container instance",
        "description": "Performs scoring with specified input data in the container instance.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The input data within a CSV file.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "The request succeeded. The test ID was returned.",
			"schema": {
              "$ref": "#/definitions/executionID"
            }
          },
		  "400": {
			"description": "The request was invalid. The CSV file doesn't exist",
			"schema": {
              "$ref": "#/definitions/badRequest"
            }
		  }
        }
      }
    },
    "/query/{id}": {
      "get": {
        "operationId": "getResults",
        "summary": "Get the test results",
        "description": "Returns the test results in a CSV file when the query execution has completed.",
        "parameters": [
		  {
            "name": "id",
            "in": "path",
            "description": "The ID of the test results.",
            "required": true,
            "type": "string"
          }
		],
        "responses": {
          "200": {
            "description": "The test results were returned.",
            "schema": {
              "type": "file"
            }
          },
		  "404": {
			"description": "The test results could not be found."
		  }
        }
      }
    },
    "/query/{id}/log": {
      "get": {
        "operationId": "getExecutionLog",
        "summary": "Get the execution log",
        "description": "Returns the execution log for the test results.",
        "parameters": [
		  {
            "name": "id",
            "in": "path",
            "description": "The ID of the test results.",
            "required": true,
            "type": "string"
          }
		],
        "responses": {
          "200": {
            "description": "The execution log for the test results was returned.",
            "schema": {
              "type": "file"
            }
          },
		  "404": {
			"description": "The execution log could not be found."
		  }
        }
      }
    },
    "/system/log": {
      "get": {
        "operationId": "getSystemLog",
        "summary": "Get the system log",
        "description": "Returns the Gunicorn service log for the system.",
        "responses": {
          "200": {
            "description": "The system log was returned.",
            "schema": {
              "type": "file"
            }
          },
		  "404": {
			"description": "The system log could not be found."
		  }
        }
      }
    }
  },
  "definitions": {
    "executionID": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        }
      }
    },
	"badRequest": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
	"ErrorResponse": {
      "properties": {
        "status_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}

